## üõ†Ô∏è **Tech Stack**

* **Framework:** Next.js (App Router)
* **Styling:** Tailwind CSS
* **UI Components:** ShadCN UI
* **Icons:** Lucide
* **State Management:** React Context / local component state


## üóìÔ∏è **Frontend Timeline: 10-Day Breakdown**

### ‚úÖ **Day 1: Project Bootstrapping**

* Setup Next.js with App Router (`npx create-next-app@latest`)
* Install Tailwind CSS and configure
* Setup ShadCN (`npx shadcn-ui@latest init`)
* Setup project structure:

  ```
  /app
    /auth
    /dashboard
    /jobs
    /profile
    /components
  /lib
  /types
  /data
  ```
* Add layout with top navigation + sidebar (role-aware)


### ‚úÖ **Day 2: Authentication (UI only)**

* Build login and signup pages
* Role toggle (Contractor / Project Owner)
* Add state to simulate logged-in user & role
* Redirect to dashboard on login


### ‚úÖ **Day 3: Profile Setup UI**

* **Contractor Profile Page**

  * Avatar upload (mock), name, bio, rate/hr, skills (multiselect), resume upload, country
* **Project Owner Profile Page**

  * Avatar, name, bio, official email, country
* Use `Card`, `Input`, `Textarea`, `FileUploader`, etc. from ShadCN


### ‚úÖ **Day 4: Wallet UI (Mock)**

* Wallet page showing:

  * Wallet address (readonly)
  * Chain (dropdown)
  * Wallet balance (mock USDC)
* "Fund Wallet" button (just shows modal)
* Use modal/dialog and toast components


### ‚úÖ **Day 5: Job Posting (Project Owner)**

* Post Job Form:

  * Title, description, budget (fixed or hourly), deadline
* Posted Jobs List
* Job cards with view button


### ‚úÖ **Day 6: Job Browsing (Contractor)**

* Job Feed

  * Filters (budget range, skill)
  * Job card with quick ‚ÄúApply‚Äù button
* Job Details page

  * Description, budget, skills, etc.
  * Apply button (agree to price or propose own)


### ‚úÖ **Day 7: Applications Flow (UI Only)**

* Contractor: ‚ÄúMy Applications‚Äù page (status tracking)
* Project Owner: List of applicants on each job

  * View resume, bid, and "Accept" button
* Accept = simulate escrow status


### ‚úÖ **Day 8: Escrow + Work Flow UI**

* Escrow Status page

  * Job progress bar (Posted ‚Üí In Escrow ‚Üí In Progress ‚Üí Completed ‚Üí Released)
* "Mark Work Done" toggle for both roles
* Payment release logic (UI only)


### ‚úÖ **Day 9: Settings & Chat UI (Optional)**

* Settings:

  * Change password (UI only)
  * Set payout wallet address
* Chat mock page (optional)

  * Basic chat interface for 1:1 messaging


### ‚úÖ **Day 10: Testing, UX Polish, and Deployment**

* Ensure route protection based on role
* Ensure mobile responsiveness
* Add loading states and skeletons
* Test all user flows
* Deploy to **Vercel**


## üéÅ Optional Enhancements

* Add placeholder API simulation with `msw` or `json-server`
* Add toast notifications (e.g., "Application sent")
* Add error handling and validation (Zod + React Hook Form)


## ‚úÖ Final Deliverables

* Complete frontend for:

  * Auth
  * Dashboard
  * Profile
  * Wallet
  * Job Post/Apply
  * Escrow flow
* Responsive UI with Tailwind + ShadCN
* Role-based route protection
* Deployment-ready (Vercel)
